<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cuiPictureBox1.Content" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKMAAACjCAYAAADmbK6AAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAGW9JREFUeF7t3eeSKjfXhmFn/3HO9nbOOedcTud/Rnx18fLsT5a7gQF1gNGqUsFA
        B2mtWyuom557unTp0qVLly5dunTp0qVLly5dhuW+++7b3H///ZsHHnhg8+CDD6666aO+6vOu+10uRfaB
        9vDDD2+ee+65zZtvvrl5//33Nx999NHmyy+/3Hz33Xeb77//flVNn/Tt008/3XzwwQfbPj///PPbMdTj
        6sAuLDV0Dz300L9A+/jjj/8Dmvdff/315quvvtp88803mx9++GHz66+/bv76669VNn378ccft/3U3xLW
        jMdYxoDtkE4oFEvJzz777H+827fffrsFTWM8RhwC7c8//9x+nvb7779v/v77780///yzmqY/+qpvv/32
        27afXuuxaH/88cfmp59++hewQ5DSGd3R4U6dXW4qlMfrvfTSS5t33nnnrservRvItNJ4jMlgJWze+9w2
        v/zyy919ayMv2TKGehzpf90CrZZjlJCaoHT2+eefb+F8+eWXtzrtYB4hNYCffPLJVpHxeiAKSLXBtNI4
        +b4Ezr5ABrTmuGU4X7rpTybbzz//vB3DocmWsQVQ77OtZsyB07E/++yzDuaYjAFYGyWGKFv5OYPxCv6O
        VyiB07744ovNhx9+uD3PG2+8sc01hwqDuZs+yPmEVX3Tx+ggaUjGkklpzMYbPXgFaTkhy2Yb+yUX7WAW
        IskGw9tvvz0IYDzgkEI129g2hko7BNyak/uhFQGQGIOxBFRjTMqi0UGpt+iu1l+txxJMeaZc/IUXXtie
        f9el65Z77733bvWbIuQYAAMfxQHXrLZ/CR3DrR24U2VsFSGQ0gWdlJMabDcBE9SgfPfddzcvvvji9jxX
        W5Eb3J07d7azu4SwVFQUVwNI0fF4r7322uaZZ57ZKuvaoLupBFK6oBO6iQels4CZ8B79lkBG776Pp1Qw
        Os6rr766efzxx69Hv/GGZhwFjUGYGep7sJYAmqnJa24zfIekhFPIlQbRoVSITpN3xmuWQJZ2sI10IFCy
        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
        RK5CYII=
</value>
  </data>
</root>